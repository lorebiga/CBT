<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- CheckboxTree POM -->
	<groupId>eu.floraresearch</groupId>
	<artifactId>lablib-checkboxtree</artifactId>
	<version>4.0-beta-2-SNAPSHOT</version>
	<packaging>jar</packaging>

<<<<<<< HEAD
	<!-- POM Relationships -->
	<!-- <parent> <groupId>eu.floraresearch</groupId> <artifactId>lablib-pom</artifactId> 
		<version>8.0</version> <relativePath>../lablib-pom/pom.xml</relativePath> 
		</parent> -->
=======
    <!-- POM Relationships -->
    <parent>
        <groupId>eu.floraresearch</groupId>
        <artifactId>lablib-pom</artifactId>
        <version>8.0</version>
    </parent>
>>>>>>> 7c777fbf2b8ad05737e4ff5b8bb212f962b92c2b

	<!-- Project Information -->
	<name>CheckboxTree</name>
	<description><![CDATA[CheckboxTree is a Java Swing component providing a tree-like widget with checkboxes in
		each node. Checkboxes can toggle between the checked and unchecked state. Disabled
		and greyed checkboxes are also supported. The CheckboxTree API design is inspired by
		the JTree interface.<br />
		For more information, see this
		<a href="http://www.javaworld.com/javaworld/jw-09-2007/jw-09-checkboxtree.html">JavaWorld article</a>.
		]]>
    </description>
	<url>http://www.essi-lab.eu/projectsSites/lablib-checkboxtree</url>

	<licenses>
		<license>
			<name>GNU General Public License</name>
			<url>http://www.essi-lab.eu/projectsSites/lablib-checkboxtree/COPYING</url>
			<distribution>manual</distribution>
			<comments>This license and any later version applies to the program.</comments>
		</license>
	</licenses>

	<organization>
		<name>ESSI-Lab</name>
		<url>https://www.essi-lab.eu/</url>
	</organization>
	<developers>
		<developer>
			<id>bigagli</id>
			<name>Lorenzo Bigagli</name>
			<email>lorenzo.bigagli@cnr.it</email>
			<roles>
				<role>Project Manager</role>
				<role>Architect</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>boldrini</id>
			<name>Enrico Boldrini</name>
			<email>enrico.boldrini@cnr.it</email>
			<roles>
				<role>Project Manager</role>
				<role>Architect</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Jens Happe</name>
			<email>jhappe@mdacorporation.com</email>
			<roles>
				<role>user</role>
			</roles>
			<organization>MacDonald, Dettwiler &amp; Associates Ltd. (Canada)</organization>
			<timezone>-8</timezone>
		</contributor>
		<contributor>
			<name>Fabrizio Papeschi</name>
			<email>fabrizio.papeschi@cnr.it</email>
			<roles>
				<role>user</role>
			</roles>
			<organization>CNR (Italy)</organization>
			<timezone>+1</timezone>
		</contributor>
		<contributor>
			<name>Michael Rudolf</name>
			<email>javaprog@gmx.de</email>
			<roles>
				<role>user</role>
			</roles>
			<organization>BT-GIS (Germany)</organization>
			<timezone>+1</timezone>
		</contributor>
	</contributors>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/lorebiga/CheckboxTree/issues</url>
	</issueManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<pluginManagement>
			<!-- useful command to check possible updates: mvn versions:display-plugin-updates -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<!-- GOTCHA!! version 3.2 is bugged on OS X (jetty listens on port 0); 
						should be fixed in >3.3 -->
					<version>3.9.1</version>
					<dependencies>
						<!-- add support for WebDAV -->
						<dependency>
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-webdav-jackrabbit</artifactId>
							<version>2.4</version>
						</dependency>
						<!-- the following was needed with jackrabbit 2.2 -->
						<!-- force slf4j 1.6.x or it fails due to missing class StaticLoggerBinder -->
						<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> 
							<version>1.6.1</version> </dependency> -->
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- changes.xml validation -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-changes-plugin</artifactId> 
				<executions> <execution> <id>validate-changes</id> <phase>pre-site</phase> 
				<goals> <goal>changes-validate</goal> </goals> <configuration> if set to 
				true the build will fail if the changes file is invalid, if set to false 
				warnings will be logged. <failOnError>true</failOnError> </configuration> 
				</execution> </executions> </plugin> -->
			<!-- compiler set to 1.7 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- enforcing plugin and maven versions -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-plugin-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.1.1,)</version>
								</requireMavenVersion>
								<!-- requirePluginVersions is not compatible with Maven 3 (mvn3 core 
									issues a warning anyway...) -->
								<!-- <requirePluginVersions> <message>Best practice is to always 
									define plugin versions!</message> <banLatest>true</banLatest> <banRelease>true</banRelease> 
									<banSnapshots>true</banSnapshots> <phases>clean,deploy,site</phases> <additionalPlugins> 
									<additionalPlugin>org.apache.maven.plugins:maven-eclipse-plugin</additionalPlugin> 
									<additionalPlugin>org.apache.maven.plugins:maven-reactor-plugin</additionalPlugin> 
									<additionalPlugin>org.apache.maven.plugins:maven-help-plugin</additionalPlugin> 
									</additionalPlugins> </requirePluginVersions> -->
								<!-- <unCheckedPluginsList>org.apache.maven.plugins:maven-enforcer-plugin</unCheckedPluginsList> -->
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- generate jar with no POM but with more extensive information -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- generate javadocs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
					<quiet>false</quiet>
					<!-- ^ set this to true to silence the output -->
					<skip>true</skip>
					<!-- ^ set this to true to skip javadoc'ing -->
					<!-- <minmemory>128m</minmemory> -->
					<!-- <maxmemory>512</maxmemory> -->
					<!-- <links> <link>http://download.oracle.com/javase/7/docs/api/</link> 
						</links> -->
					<!-- ^ this is used to retrieve the package-list. Sometimes it hangs 
						forever. As below we don't need to be online. But we need the package-list 
						to be available somewhere (TBD) -->
					<offlineLinks>
						<offlineLink>
							<url>http://download.oracle.com/javase/7/docs/api/</url>
							<!-- the path or URL to the directory containing the package-list 
								file for the external documentation -->
							<location>http://www.essi-lab.eu/projectsSites/lablib-pom/</location>
						</offlineLink>
					</offlineLinks>
				</configuration>
				<executions>
					<execution>
						<id>Super POM attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>verify</phase>
						<!-- I tried to bind it to install phase, but it ran after the install 
							plugin, so javadocs were not installed. Declaring the install plugin after 
							this works, but it actually runs twice: _before_ and _after_ the javadoc:jar, 
							so jar and sources are installed twice. The verify phase seems a good compromise. -->
					</execution>
				</executions>
			</plugin>
			<!-- generate sources jar too -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>Super POM attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> 
				</plugin> -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
				<configuration> <configLocation>http://svn.apache.org/repos/asf/maven/plugins/trunk/maven-checkstyle-plugin/src/main/resources/config/maven_checks.xml</configLocation> 
				<headerLocation>http://svn.apache.org/repos/asf/maven/plugins/trunk/maven-checkstyle-plugin/src/main/resources/config/maven-header.txt</headerLocation> 
				</configuration> </plugin> -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-pmd-plugin</artifactId> 
				</plugin> -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> 
				</plugin> <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>taglist-maven-plugin</artifactId> 
				</plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jxr-plugin</artifactId> 
				</plugin> -->
			<!-- Report about violations of coding standards -->
			<!-- plugin> <artifactId>maven-checkstyle-plugin</artifactId> </plugin -->
			<!-- Generate "JavaNCSS Report" report -->
			<!-- plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>javancss-maven-plugin</artifactId> 
				<version>2.0-beta-1</version> </plugin -->
			<!-- generate javadoc reports -->
			<!-- this is commented out at the moment (version 8.0), as site:deploy 
				fails, with javadocs and webDAV (note that nested comments have been hacked) -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
				<version>2.9</version> <!- note that version is not inherited from pluginMngmt 
				(issue MSITE-443; should be fixed in maven 3.1) -> <configuration> <quiet>false</quiet> 
				<!- ^ set this to true to silence the output -> <skip>false</skip> <!- ^ 
				set this to true to skip javadoc'ing -> <!- <minmemory>128m</minmemory> -> 
				<!- <maxmemory>512</maxmemory> -> <!- <links> <link>http://download.oracle.com/javase/7/docs/api/</link> 
				</links> -> <!- ^ this is used to retrieve package-list. Sometimes it hangs 
				forever. The version below doesn't need to go online. But it needs the package-list 
				to be available somewhere (TBD) -> <offlineLinks> <offlineLink> <url>http://download.oracle.com/javase/7/docs/api/</url> 
				<!- the path or URL to the directory containing the package-list file for 
				the external documentation -> <location>http://www.essi-lab.eu/projectsSites/lablib-pom/</location> 
				</offlineLink> </offlineLinks> </configuration> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
				<!-- note that version is not inherited from pluginMngmt (issue MSITE-443; 
					should be fixed in maven 3.1) -->
				<configuration>
					<quiet>false</quiet>
					<!-- ^ set this to true to silence the output -->
					<skip>false</skip>
					<!-- ^ set this to true to skip javadoc'ing -->
					<!-- <minmemory>128m</minmemory> -->
					<!-- <maxmemory>512</maxmemory> -->
					<!-- <links> <link>http://download.oracle.com/javase/7/docs/api/</link> 
						</links> -->
					<!-- ^ this is used to retrieve package-list. Sometimes it hangs forever. 
						The version below doesn't need to go online. But it needs the package-list 
						to be available somewhere (TBD) -->
					<offlineLinks>
						<offlineLink>
							<url>http://download.oracle.com/javase/7/docs/api/</url>
							<!-- the path or URL to the directory containing the package-list 
								file for the external documentation -->
							<location>http://www.essi-lab.eu/projectsSites/lablib-pom/</location>
						</offlineLink>
					</offlineLinks>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.12.1</version>
				<!-- note that version is not inherited from pluginMngmt (issue MSITE-443; 
					should be fixed in maven 3.1) -->
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.1.2</version>
				<!-- note that version is not inherited from pluginMngmt (issue MSITE-443; 
					should be fixed in maven 3.1) -->
				<reportSets>
					<reportSet>
						<reports>
							<report>dependencies</report>
							<report>project-team</report>
							<report>license</report>
							<report>summary</report>
							<!-- report>scm</report -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<!-- <distributionManagement> <site> <id>site-dav</id> <url>dav:${project.url}</url> 
		</site> <repository> <id>lab.private.rel</id> <url>http://essi-lab.eu/nexus/content/repositories/lab.private.rel</url> 
		</repository> <snapshotRepository> <id>lab.private.snap</id> <url>http://essi-lab.eu/nexus/content/repositories/lab.private.snap</url> 
		</snapshotRepository> </distributionManagement> -->

	<!-- <scm> <connection>scm:svn:https://essi-lab.eu/svn/lablib/lablib-checkboxtree/trunk</connection> 
		</scm> -->

</project>
